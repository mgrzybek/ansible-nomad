---

- name: Packages install
  package:
    name: "{{ nomad_distro_packages }}"
    state: "{{ nomad_package_state }}"
    update_cache: "{{ (ansible_pkg_mgr == 'apt') | ternary('yes', omit) }}"
    cache_valid_time: "{{ (ansible_pkg_mgr == 'apt') | ternary(cache_timeout, omit) }}"
  register: install_packages
  until: install_packages is success
  retries: 5
  delay: 2
  tags:
    - install-apt
    - install-yum
    - install-zypper

###########################
# Recuperation du binaire

- name: Get nomad binary (last version: {{ last_version.stdout }})
  when:
    - nomad_package_state == 'latest'
    - nomad_bin_version.stdout|default('') != last_version.stdout
  get_url:
    url: "{{ nomad_nomad_repo_url }}/{{ last_version.stdout }}/nomad_{{ last_version.stdout }}_linux_amd64.zip"
    dest: "/tmp/nomad_bin.zip"
  environment:
    https_proxy: "{{ nomad_http_proxy }}"

- name: Get nomad binary (given version: {{ nomad_nomad_version }})
  when:
    - nomad_package_state == 'present'
    - nomad_bin_version.stdout|default('') != nomad_nomad_version
  get_url:
    url: "{{ nomad_nomad_bin_zip_url }}"
    dest: "/tmp/nomad_bin.zip"
  environment:
    https_proxy: "{{ nomad_http_proxy }}"

###########################
# Installation du binaire

- name: Binary installation
  when:
    - nomad_bin_stats.stat.exists == false
  unarchive: src="/tmp/nomad_bin.zip" dest=/usr/local/bin/ mode=0755 copy=no

#############################################
# Création des répertoires et service systemd

- name: Nomad directories
  file: path={{ item }} state=directory
  with_items:
    - /etc/nomad.d
    - /var/lib/nomad

- name: Systemd service file
  template: src=nomad.service.j2 dest=/etc/systemd/system/nomad.service
  notify: reload systemd
