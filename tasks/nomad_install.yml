---

- name: Install | | Packages install
  package:
    name: "{{ nomad_distro_packages }}"
    state: "{{ nomad_package_state }}"
    update_cache: "{{ (ansible_pkg_mgr == 'apt') | ternary('yes', omit) }}"
    cache_valid_time: "{{ (ansible_pkg_mgr == 'apt') | ternary(cache_timeout, omit) }}"
  register: install_packages
  until: install_packages is success
  retries: 5
  delay: 2
  tags:
    - install-apt
    - install-yum
    - install-zypper

##############################
# Get the binary from internet

- name: Install | | Install nomad
  when: install_nomad | lower == 'true'
  block:
    - name: Install | | Get binary ({{ version_to_install }})
      register: get_binary
      until: get_binary is success
      retries: 5
      delay: 10
      get_url:
        url: "{{ nomad_nomad_repo_url }}/{{ version_to_install }}/nomad_{{ version_to_install }}_linux_amd64.zip"
        dest: "/tmp/nomad_bin.zip"
      environment:
        http_proxy: "{{ nomad_http_proxy }}"
        https_proxy: "{{ nomad_https_proxy }}"

    - name: Install | | Install binary
      unarchive: src="/tmp/nomad_bin.zip" dest=/usr/local/bin/ mode=0755 copy=no
      notify: restart nomad service

    - name: Install | | Cleanup
      file: path="/tmp/nomad_bin.zip" state=absent

################################################
# Create directories and configuration artifacts

- name: Install | | Nomad directories
  file: path={{ item }} state=directory
  with_items:
    - /etc/nomad.d
    - /var/lib/nomad

- name: Install | | Systemd service file
  template: src=nomad.service.j2 dest=/etc/systemd/system/nomad.service
  notify: reload systemd
